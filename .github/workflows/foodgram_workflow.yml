name: foodgram_workflow

on: [push]

jobs:
  backend_tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: python3 setup
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: dependencies installation
      run: | 
        python -m pip install --upgrade pip 
        cd backend/
        pip install -r requirements.txt 

    - name: unit testing
      run: |
        pytest
        python -m flake8

  backend_to_docker_hub_delivery:
    name: deliver foodgram_api image to docker hub
    runs-on: ubuntu-latest
    needs: backend_tests

    steps:
    - name: check-out the repository
      uses: actions/checkout@v2 
    - name: docker buildx setup
      uses: docker/setup-buildx-action@v1 
    - name: docker login 
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: push to docker hub
      uses: docker/build-push-action@v2 
      with:
        file: backend/Dockerfile
        context: backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_api:latest
  
  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs: backend_to_docker_hub_delivery

    steps:
    - name: deploy foodgram_ui and foodgram_api containers to remote host
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker compose stop
          sudo docker-compose rm -f backend
          sudo docker-compose rm -f frontend
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_api:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_ui:latest
          sudo docker-compose up -d --build

  send_message:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: send success status notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} finished